{
  "courses_list": [
    {
      "course_name": "Code.org (K-1st)",
      "link": "https://docs.google.com/document/d/1FGjioEv8UY_Q_RSd89adssDLtwYcxXYEbehWKcR3j74/edit#heading=h.zhy3ra3jp4ku",
      "course_description": "The Fundamentals of Programming with Code.org course is an entry-level class for K-1st graders. No experience is necessary for this class. Code.org is an easy-to-use platform that teaches fundamental programming concepts. Students will need internet access, paper, and a writing utensil. ",
      "file_path": "https://ucarecdn.com/a7759313-2958-4d84-b05e-adb241da2bdb/-/scale_crop/400x400/smart/"
    },
    {
      "course_name": "Basic Scratch (2nd-3rd) Pt 1",
      "link": "https://docs.google.com/document/d/1FGjioEv8UY_Q_RSd89adssDLtwYcxXYEbehWKcR3j74/edit#heading=h.8lx7ibxle81w",
      "course_description": "Basic Scratch Part 1 (2-3) is the first part of a two-part course introducing the Scratch platform to 2nd and 3rd graders. Scratch is a popular visual block-based programming language developed by the MIT Media Lab. No experience is necessary for this class. Students need internet access and a personal device (preferably computer). ",
      "file_path": "https://ucarecdn.com/4e7180ef-c97c-45f0-a413-879f6c53d0b0/-/scale_crop/400x400/smart/"
    },
    {
      "course_name": "Basic Scratch (2nd-3rd) Pt 2",
      "link": "https://docs.google.com/document/d/1FGjioEv8UY_Q_RSd89adssDLtwYcxXYEbehWKcR3j74/edit#heading=h.6s2yzgkii13e",
      "course_description": "Basic Scratch Part 2 (2-3) is the second part of a two-part course introducing the Scratch platform to 2nd and 3rd graders. Students should have taken Basic Scratch Part 1 before taking this class.  Scratch is a popular visual block-based programming language developed by the MIT Media Lab. Students need internet access and a personal device (preferably computer)",
      "file_path": "https://ucarecdn.com/34f5545c-23c0-4cb0-9551-05fa5c79b7af/-/scale_crop/400x400/smart/"
    },
    {
      "course_name": "Scratch (4th-6th)",
      "link": "https://docs.google.com/document/d/1FGjioEv8UY_Q_RSd89adssDLtwYcxXYEbehWKcR3j74/edit#heading=h.a99ezfun0e4a",
      "file_path": "https://ucarecdn.com/6cab923d-c43d-455a-ab9d-b1857a66778c/-/scale_crop/400x400/smart/",
      "course_description": "**Overview**\n\n* Scratch (4-6) is designed for 4th-6th grade students without any prior exposure to Scratch or other programming languages.\n* Students will receive a basic introduction to Scratch, a visual block-based programming language. It is a popular way to learn the logic behind programming, and is the perfect stepping stone to more advanced written coding languages such as Python and Java.\n* In this course, students will learn all the basics of coding with Scratch, from basic move functions to advanced programming concepts such as variables. \n\n**Who should take this course?**\n\n* 4th-6th Graders with minimal or no prior experience with Scratch. \n\n  * Please reference the topic overview section and see what concepts the student knows. If the student only knows 1-3 of the topics, this course will still be challenging enough.\n* 3rd Graders with some prior experience in Scratch or coding.\n\n  * Single-digit multiplication and division are prerequisites.\n* 7th-8th graders with no prior experience in Scratch or coding.\n\n  * While 7- 8th graders may find this course to be a little slow, it will still give them a baseline understanding of all the Scratch programming concepts. \n\n**Who shouldn’t take this course?**\n\n* K-2nd Graders.\n\n  * These students should take either Fundamentals of Programming with Code.org (K-1), or Scratch (2-3). \n\n    * Scratch (2-3) teaches the same concepts, but at a slower pace better geared towards younger students. \n* 3rd Graders who do not know single digit multiplication and division. \n\n  * These students should take Basic Scratch Pt 1 (2-3). \n* 4th-6th Graders with extensive prior experience in Scratch.\n\n  * This is still a beginner entry-level course, so these students might find it too simple. \n* 7th and 8th Graders with prior programming experience. \n\n  * We recommend Java (6-8), HTML/CSS (5-8), and Python (6-8) instead.\n\n**Topic Overview**\n\n* Sprites and Stages\n* Motion Blocks\n* Sound and Appearance Blocks\n* Events\n* Loops and If-Then Statements\n* Sensors\n* Operators and Conditionals\n* Variables\n* Lists\n* Miscellaneous Concepts Such as Clones and Messages\n\n**Class Structure**\n\n1. First class meeting: 1 hour video call\n2. Homework (5-15 minutes)\n3. Second class meeting: 1 hour video call\n4. Homework (5- 15 minutes)\n\n**Curriculum Goals**\n\n* Students will master all the fundamentals of Scratch. \n\n  * They should be able to make a Scratch project independently from start to finish.\n* Students should be ready to transition to HTML/CSS (6-8), Python (6-8), and Java (6-8) after taking this class."
    },
    {
      "course_name": "Tinkercad (5th-8th)",
      "file_path": "https://ucarecdn.com/28d5cf25-d0de-4834-8217-6929810dde7c/-/scale_crop/400x400/smart/",
      "link": "https://docs.google.com/document/d/1FGjioEv8UY_Q_RSd89adssDLtwYcxXYEbehWKcR3j74/edit#heading=h.xtk7ppt4rxb5",
      "course_description": "**Overview**\n\n* Computer-Aided Design with TinkerCAD introduces students to the basics of computer-aided design (CAD), the use of 3D modeling to create designs.\n* By the end of the class, students will be able to fluently create designs in Tinkercad.\n\n**Who should take this course?**\n\n* 5th -8th Graders without any prior experience or only minimal experience with CAD\n\n**Who shouldn’t take this course?**\n\n* K-4th graders.\n\n  * The geometric concepts and pacing of this class is likely too challenging for younger students.\n* Students with significant experience with CAD. \n\n  * ​The course is likely too slow for these students.\n\n**Topic Overview**\n\n* Introduction to CAD\n* Creating basic objects\n* Design principles\n* Advanced Tinkercad features\n* 3D printing and fabrication\n\n**Class Structure**\n\n1. First class meeting: 1 hour video call (Monday or Tuesday)\n2. Second class meeting: 1 hour video call (Thursday or Friday)\n\n**Curriculum Goals**\n\n* Students should understand why computer-aided design is used.\n* Students should be able to fluently create their own designs using TinkerCAD."
    },
    {
      "course_name": "HTML/CSS (6th-8th)",
      "link": "https://docs.google.com/document/d/1FGjioEv8UY_Q_RSd89adssDLtwYcxXYEbehWKcR3j74/edit#heading=h.2x0hpf21nmqk",
      "course_description": "**Overview**\n\n* Web Design with HTML/CSS (6-8) is designed for students in grades 6th-8th who want to learn about how websites are developed. \n* HTML and CSS are used to develop websites. HTML provides structure to a website, and CSS provides style.\n* This class is meant for beginners.\n\n**Who should take this course?**\n\n* 6th-8th Graders with no or minimal experience with HTML/CSS\n\n  * Parents and students should reference the concepts listed below to see if this course is a good fit.\n\n**Who shouldn’t take this course?**\n\n* K-3rd Graders.\n\n  * These students should take Fundamentals of Programming with Code.org (K-1) or Basic Scratch (2-3).\n* 4th-5th Graders who have never taken a programming course. \n\n  * We recommend Scratch (4-6).\n* 6th-8th Graders with extensive HTML/CSS experience. \n\n  * Please review the topic overview below to see what topics are covered in this class.\n\n**Topic Overview**\n\n* HTML/CSS Syntax\n* Semantic and Common HTML Tags\n* Visual, Spatial and Positional CSS Styling Properties\n* Types of CSS Styling\n* Dynamic Styling with Javascript\n* Hosting a Website on the Internet\n\n**Class Structure**\n\n1. 10-30 minute video lesson (to be watched before the first class).\n2. First class meeting: 1 hour video call (Monday or Tuesday)\n3. Homework (1-2 hours)\n4. Second class meeting: 1 hour video call (Thursday or Friday)\n\n**Curriculum Goals**\n\n* Students should master all the fundamentals of HTML and CSS. \n* The student should be ready for more advanced HTML/CSS techniques, such as efficient markup structure and responsive design.​",
      "file_path": "https://ucarecdn.com/80953391-e256-4103-be91-dfeff3818a3a/-/scale_crop/400x400/smart/"
    },
    {
      "course_name": "Python (6th-8th)",
      "link": "https://docs.google.com/document/d/1FGjioEv8UY_Q_RSd89adssDLtwYcxXYEbehWKcR3j74/edit#heading=h.c2uu5p6okls",
      "course_description": "**Overview**\n\n* Python (6-8) is designed for students in grades 6th-8th who do not have any prior experience with the Python coding language. \n* ​Python is a professional coding language widely used by many companies, including Wikipedia, Google, and Facebook. This course is designed to teach students the basics of Python.\n\n**Who should take this course?**\n\n* 6th-8th Graders with no or minimal experience with Python. \n\n  * Please reference the topic overview section and see what concepts the student knows. If the student only knows 1-3 of the topics, this course will still be challenging enough.\n* 4th-5th Graders with some prior experience in programming in Scratch, or another language.\n\n**Who shouldn’t take this course?**\n\n* K-3rd Graders.\n\n  * These students should take Fundamentals of Programming with Code.org (K-1) or Basic Scratch (2-3).\n* 4th-5th Graders who have never taken a programming course. \n\n  * These students should take Scratch (4-6).\n* 6th-8th Graders with extensive Python experience. \n\n  * These students should take Java (6-8).\n\n**Topic Overview**\n\n* Syntax\n* Calculator\n* Variables and Types\n* Lists\n* Conditional Logic  and Loops\n* String Operations and Formatting\n* Functions\n\n**Class Structure**\n\n1. 10-30 minute video lesson.\n2. First class meeting: 1 hour video call\n3. Homework (1- 2 hours) \n4. Second class meeting: 1 hour video call\n\n**Curriculum Goals**\n\n* Students should master all the fundamentals of Python and programming in general. \n* Students should have a better baseline for other written coding languages such as Java.",
      "file_path": "https://ucarecdn.com/6da0c1a8-8aef-4a8a-847e-d88ba09aeb43/-/preview/400x400/"
    },
    {
      "course_name": "Java (6th-8th)",
      "link": "https://docs.google.com/document/d/1FGjioEv8UY_Q_RSd89adssDLtwYcxXYEbehWKcR3j74/edit#bookmark=kix.jfkdtp59mbef",
      "file_path": "https://ucarecdn.com/4228d2d9-ce7c-482a-b552-b9745ba5b0a4/-/scale_crop/400x400/smart/",
      "course_description": "**Overview**\n\n* Java (6-8) is designed for students grades 6th-8th who do not have any prior experience with the Java coding language.\n* Java is a professional coding language widely used by many companies. This course is designed to teach students the basics of Java.\n* This class is designed for students without any prior experience with Java, so students with prior experience may find the class to be initially too slow. \n\n**Who should take this course?**\n\n* 6th-8th Graders with none or minimal experience with Java.\n\n  * Please reference the topic overview section and see what concepts the student knows. If the student only knows 1-3 of the topics, this course will still be challenging enough.\n* 4th-5th Graders with some prior experience in programming in Scratch, or another language.\n\n**Who shouldn’t take this course?**\n\n* K-3rd Graders.\n\n  * These students should take a more beginner course such as Fundamentals of Programming with Code.org (K-1) or Basic Scratch (2-3).\n* 4th-5th Graders who have never taken a programming course. \n* * These students should take Scratch (4-6).\n* 6th-8th Graders with extensive Java experience. \n\n  * Please review the topic overview below to see what topics are covered in this class.\n\n**Topic Overview**\n\n* Syntax\n* Data Types\n* Print Statements\n* Variables\n* Math Operators\n* Conditional statements (if, else, else if, switch)\n* Loops (while, for)\n* Arrays\n* String Methods\n* Static Methods\n* 2D Arrays\n* Classes and Objects\n* Hashmaps\n* ArrayLists\n* File and User Input\n* Math class, random class\n\n**W﻿eekly Class Structure**\n\n1. First class meeting: 1 hour video call\n2. Homework (1- 2 hours) \n3. Second class meeting: 1 hour video call\n4. Homework (1- 2 hours) \n\n**Curriculum Goals**\n\n* Students should master all the fundamentals of Java and programming in general.\n* Students should have a better baseline for other written coding languages such as C and C++."
    }
  ]
}