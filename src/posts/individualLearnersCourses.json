{
  "courses_list": [
    {
      "course_name": "Code.org (K-1st)",
      "link": "https://docs.google.com/document/d/1DJ0TorjSWHcvqLdqcWsm2RoO2Ug_XlsD3SybXR7y-g4/edit#bookmark=id.vyf4jrjhcci5",
      "course_description": "**Overview**\n\n* Fundamentals of Programming with Code.org is designed to be an entry level programming course for all K-1st graders. \n* Students will be introduced to block-based coding through lessons from Code.org, an organization that runs a popular platform for learning programming. \n\n**Who should take this course?**\n\n*  K-1st graders. \n\n  * Unless K-1st graders have extensive experience with Code.org, they should take this course.\n\n**Who shouldn’t take this course?**\n\n* 2nd-3rd Graders.\n\n  * These students should take Basic Scratch Part 1 (2-3).\n* 4th Graders and above.\n\n  * Other entry-level courses exist for older students, such as Scratch (4-6), HTML/CSS (6-8), Python (6-8).\n\n**Topics Overview**\n\n* Digital Citizenship\n* Sequencing\n* Loops\n* Events\n* Binary\n* Conditionals\n\n**Class Structure**\n\n1. First class meeting: 1 hour video call (Monday or Tuesday)\n2. Second class meeting: 1 hour video call (Thursday or Friday)\n\n**Curriculum Goals**\n\n* Students will be introduced to the foundations of programming and computer science through fun activities that combine critical thinking and creative application. \n* Students should be ready to transition to Basic Scratch Pt 1 (2-3).\n\n**Required Materials**\n\n* Paper and a writing utensil (pen or pencil) will also occasionally be used for various activities. \n\n  * Students should have these materials ready for each class, although they will not be used in every class.",
      "file_path": "https://ucarecdn.com/16871c5d-6a17-43f7-b0c7-515c8a0f62b9/-/preview/400x400/"
    },
    {
      "course_name": "Basic Scratch (2nd-3rd) Pt 1",
      "link": "https://docs.google.com/document/d/1DJ0TorjSWHcvqLdqcWsm2RoO2Ug_XlsD3SybXR7y-g4/edit#bookmark=id.wqexiaeprz3y",
      "course_description": "**Overview**\n\n* Basic Scratch Pt 1 (2-3) is designed for 2nd-3rd grade students. \n* This is a two-part 16 week course (two 8 week courses). While you can only register for one part at a time, it is highly recommended that students take both 8 week courses. \n* Students will receive a basic introduction to Scratch, a visual block-based programming language. It is a popular way to learn the logic behind programming and is the perfect stepping stone to more advanced written coding languages such as Python and Java.\n\n  * In this course, students will learn the basics of coding with Scratch, including basic move functions and intermediate level if-then statements. \n\n**Who should take this course?**\n\n* 2nd-3rd Graders. \n\n  * This course is designed for beginners in Scratch. \n\n**Who shouldn’t take this course?**\n\n* K-1st Graders\n\n  * This curriculum is too fast for K-1st graders. We recommend  Fundamentals of Programming with Code.org (K-1).\n*  K-3rd Graders with extensive prior experience in Scratch.\n\n  * This is still a beginner entry-level course, so these students might find it too simple. \n  * Parents and students should reference the concepts list below as well as the concepts list for the Basic Scratch Pt 2 (2-3) course. If they only know concepts taught in Basic Scratch Pt 1 (2-3), they should take Basic Scratch Pt 2 (2-3). \n* 4th Graders and above.\n\n  * Older students without programming experience are should take Scratch (4-6), HTML/CSS (5-8), or Python (6-8).\n\n**Topic Overview**\n\n* Sprites and Stages\n* Motion Blocks\n* Sound and Appearance Blocks\n* Events\n* Loops and If-Then Statements\n* Basic Sensors\n\n**Class Structure**\n\n1. First class meeting: 1 hour video call.\n2. Homework (30 minutes)\n3. Second class meeting: 1 hour video call.\n4. Homework (30 minutes)\n\n**Curriculum Goals**\n\n* Students should be able to program a basic program in Scratch, using motion, sound, appearance, and loop blocks. \n* Students should be ready to take the Basic Scratch Pt 2 (2-3) course.​ ​",
      "file_path": "https://ucarecdn.com/ffccda78-8bd1-4fed-80a5-f0ab66fed868/-/preview/400x400/"
    },
    {
      "course_name": "Basic Scratch (2nd-3rd) Pt 2",
      "link": "https://docs.google.com/document/d/1DJ0TorjSWHcvqLdqcWsm2RoO2Ug_XlsD3SybXR7y-g4/edit#bookmark=id.wqexiaeprz3y",
      "course_description": "**Overview**\n\n* Basic Scratch Pt 2 (2-3) is designed for 2nd-3rd grade students with some prior experience with Scratch. \n* This is a two-part 16 week course (two 8 week courses). While you can only register for one part at a time, it is highly recommended that students take both 8 week courses.\n* Students will continue to learn Scratch, a visual block-based programming language It is a popular way to learn the logic behind programming, and is the perfect stepping stone to more advanced written coding languages such as Python and Java.\n* In this course, students will continue to learn coding with Scratch, including advanced sensors, operators, and variables. \n\n**Who should take this course?**\n\n* 2nd-3rd graders with experience in Scratch\n\n  * Students should take Basic Scratch Part 1 and then take Basic Scratch Part 2.\n  * Students who know all of the topics from Basic Scratch Part 1 may take Basic Scratch Part 2.\n\n**Who shouldn’t take this course?**\n\n* K-1st Graders\n\n  * The curriculum is too fast for K-1st graders. \n  * We recommend Fundamentals of Programming with Code.org (K-1).\n* 2nd-3rd Graders with no Scratch experience.\n\n  * These students should take Basic Scratch Part 1 (2-3) first.\n*  2nd-3rd Graders with extensive prior experience in Scratch.\n\n  * This is still a beginner entry-level course, so these students might find it too simple. \n  * Parents and students should reference the concepts listed below. If they only know concepts taught in Part 1 of the course, they should take Part 2. \n* 4th Graders and above.\n\n  * Older students without programming experience should take  Scratch (4-6) or Python (6th-8th).\n\n**Topic Overview**\n\n* Advanced Sensors\n* Operators and Conditionals \n* Variables\n* Lists\n* Miscellaneous Concepts such as Clones and Messages\n\n**Class Structure**\n\n1. First class meeting: 1 hour video call.\n2. Homework (30 minutes)\n3. Second class meeting: 1 hour video call.\n4. Homework (30 minutes)\n\n**Curriculum Goals**\n\n* Students will have been introduced to the foundations of programming and computer science through Scratch. \n\n  * They should be able to program a basic Scratch project.",
      "file_path": "https://ucarecdn.com/44400d2e-71d7-411e-bbd7-fe1e8daa79c7/-/scale_crop/400x400/smart/"
    },
    {
      "course_name": "Scratch (4th-6th)",
      "link": "https://docs.google.com/document/d/1DJ0TorjSWHcvqLdqcWsm2RoO2Ug_XlsD3SybXR7y-g4/edit#bookmark=id.6kfg76nfp4vl",
      "file_path": "https://ucarecdn.com/aaa9f6b7-b21c-480f-ab2c-3db39e9ef188/-/preview/400x400/",
      "course_description": "**Overview**\n\n* Scratch (4-6) is designed for 4th-6th grade students without any prior exposure to Scratch or other programming languages.\n* Students will receive a basic introduction to Scratch, a visual block-based programming language. It is a popular way to learn the logic behind programming, and is the perfect stepping stone to more advanced written coding languages such as Python and Java.\n* In this course, students will learn all the basics of coding with Scratch, from basic move functions to advanced programming concepts such as variables. \n\n**Who should take this course?**\n\n* 4th-6th Graders with minimal or no prior experience with Scratch. \n\n  * Please reference the topic overview section and see what concepts the student knows. If the student only knows 1-3 of the topics, this course will still be challenging enough.\n* 3rd Graders with some prior experience in Scratch or coding.\n\n  * Single-digit multiplication and division are prerequisites.\n* 7th-8th graders with no prior experience in Scratch or coding.\n\n  * While 7- 8th graders may find this course to be a little slow, it will still give them a baseline understanding of all the Scratch programming concepts. \n\n**Who shouldn’t take this course?**\n\n* K-2nd Graders.\n\n  * These students should take either Fundamentals of Programming with Code.org (K-1), or Scratch (2-3). \n\n    * Scratch (2-3) teaches the same concepts, but at a slower pace better geared towards younger students. \n* 3rd Graders who do not know single digit multiplication and division. \n\n  * These students should take Basic Scratch Pt 1 (2-3). \n* 4th-6th Graders with extensive prior experience in Scratch.\n\n  * This is still a beginner entry-level course, so these students might find it too simple. \n* 7th and 8th Graders with prior programming experience. \n\n  * We recommend Java (6-8), HTML/CSS (5-8), and Python (6-8) instead.\n\n**Topic Overview**\n\n* Sprites and Stages\n* Motion Blocks\n* Sound and Appearance Blocks\n* Events\n* Loops and If-Then Statements\n* Sensors\n* Operators and Conditionals\n* Variables\n* Lists\n* Miscellaneous Concepts Such as Clones and Messages\n\n**Class Structure**\n\n1. First class meeting: 1 hour video call\n2. Homework (5-15 minutes)\n3. Second class meeting: 1 hour video call\n4. Homework (5- 15 minutes)\n\n**Curriculum Goals**\n\n* Students will master all the fundamentals of Scratch. \n\n  * They should be able to make a Scratch project independently from start to finish.\n* Students should be ready to transition to HTML/CSS (6-8), Python (6-8), and Java (6-8) after taking this class."
    },
    {
      "course_name": "Tinkercad (5th-8th)",
      "file_path": "https://ucarecdn.com/dd2b33f7-32a8-48dc-b34e-0aa829b1a6f4/-/scale_crop/400x400/smart/",
      "link": "https://docs.google.com/document/d/1khPJJN96lEFsvtt6z8PTVDjsZeWS9pa2SeyMRQZoWlA/edit?usp=sharing",
      "course_description": "* Introduces students to the basics of computer-aided design (the use of software to help with designing objects) using Tinkercad, an easy-to-use online platform. \n* No experience needed."
    },
    {
      "course_name": "Python (6th-8th)",
      "link": "https://docs.google.com/document/d/1DJ0TorjSWHcvqLdqcWsm2RoO2Ug_XlsD3SybXR7y-g4/edit#bookmark=kix.glvs347dinnl",
      "course_description": "* Introduces students to the basics of Python, a text-based programming language that is widely used. \n* No experience needed.",
      "file_path": "https://ucarecdn.com/6da0c1a8-8aef-4a8a-847e-d88ba09aeb43/-/preview/400x400/"
    },
    {
      "course_name": "HTML/CSS (6th-8th)",
      "link": "https://docs.google.com/document/d/1DJ0TorjSWHcvqLdqcWsm2RoO2Ug_XlsD3SybXR7y-g4/edit#bookmark=kix.eep0teidfpj4",
      "course_description": "* Introduces students to the use of HTML (Hypertext Markup Language) and CSS (Cascading Style Sheets) to design websites.\n* No experience needed.",
      "file_path": "https://ucarecdn.com/3b642569-6c15-4b40-9c3c-70c6f2e3a003/-/preview/400x400/"
    }
  ]
}